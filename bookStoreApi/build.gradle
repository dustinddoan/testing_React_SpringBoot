plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0-M3'
	id 'io.spring.dependency-management' version '1.1.3'
}

apply plugin: 'jacoco'

group = 'net.alienzone'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven {
		url "https://repo.spring.io/release"
	}
	maven {
		url "https://repository.jboss.org/maven2"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.modelmapper:modelmapper:3.1.1'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.4'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.mockito:mockito-core'
	testCompileOnly 'org.assertj:assertj-core'
	testImplementation ('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

}

test {
	useJUnitPlatform()
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 1.0
			}
		}
	}
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

tasks.named('test') {
	useJUnitPlatform()
}
